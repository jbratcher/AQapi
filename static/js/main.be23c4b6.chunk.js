(this["webpackJsonpshould-i-run"]=this["webpackJsonpshould-i-run"]||[]).push([[0],{17:function(e,t,a){e.exports=a(47)},44:function(e,t,a){},45:function(e,t,a){},47:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a.n(r),c=a(6),s=a.n(c),i=a(48);class l extends r.Component{constructor(e){super(e),this.state={}}render(){return n.a.createElement("header",null,n.a.createElement("section",{id:"mainHeader"},n.a.createElement("section",{id:"brand"},n.a.createElement(i.a,{to:"/"},n.a.createElement("h1",null,"ShouldIRun?"))),n.a.createElement("a",{href:"#mainHeaderNav",id:"menu-toggle",className:"toggle"},n.a.createElement("i",{className:"fa fa-bars fa-2x","aria-hidden":"true"})),n.a.createElement("nav",{id:"mainHeaderNav"},n.a.createElement("ul",null,n.a.createElement("li",null,n.a.createElement("a",{id:"nav-close",className:"toggle",href:"#top"},n.a.createElement("i",{className:"fa fa-times fa-2x"}))),n.a.createElement("li",null,n.a.createElement(i.a,{to:"/"},"Home")),n.a.createElement("li",null,n.a.createElement(i.a,{to:"/scheduler"},"Scheduler")),n.a.createElement("li",null,n.a.createElement(i.a,{to:"/bestday"},"Best Day")),n.a.createElement("li",null,n.a.createElement(i.a,{to:"/forecast"},"7 Day Forecast")),n.a.createElement("li",null,n.a.createElement(i.a,{to:"/about"},"About"))))),n.a.createElement("section",{id:"subheader"},n.a.createElement("p",null,"Get a rating on current weather conditions for your run")))}}var o=l;class u extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.handleScaleChange,a=e.handleWarmthPrefChange,r=e.userTempScale,c=e.userWarmthPreference;return n.a.createElement("section",{id:"userOptions"},n.a.createElement("section",{className:"column"},n.a.createElement("h3",null,"Options"),n.a.createElement("label",null,"Temperature scale"),n.a.createElement("select",{id:"userTempScale",value:r,onChange:t},n.a.createElement("option",{value:"f"},"Fahrenheit"),n.a.createElement("option",{value:"c"},"Celcius"),n.a.createElement("option",{value:"k"},"Kelvin"))),n.a.createElement("section",{className:"column"},n.a.createElement("label",null,"Warmth Preference"),n.a.createElement("select",{id:"userWarmthPreference",value:c,onChange:a},n.a.createElement("option",{value:"hot"},"Mucher Cooler"),n.a.createElement("option",{value:"warm"},"A Little Cooler"),n.a.createElement("option",{value:"neutral"},"Neutral"),n.a.createElement("option",{value:"chilly"},"A Little Warmer"),n.a.createElement("option",{value:"cold"},"Much Warmer"))))}}var h=u;class d extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.cityList,a=e.cityInput,r=e.countryInput,c=e.countryList,s=e.getData,i=e.handleCityInput,l=e.handleCountryInput,o=e.handleStateInput,u=e.getLocationData,h=e.stateInput,d=e.stateList;return n.a.createElement("section",{id:"formInput"},n.a.createElement("h3",null,"Location"),n.a.createElement("button",{id:"getLocation",onClick:u},"Use my location"),n.a.createElement("p",null,"-- ",n.a.createElement("b",null,"OR")," --"),n.a.createElement("section",{className:"column"},n.a.createElement("label",{id:"formLabel"},"Enter a Location"),n.a.createElement("form",null,n.a.createElement("label",{htmlFor:"country"},"Country"),n.a.createElement("select",{value:r,onChange:l},c.map((e,t)=>n.a.createElement("option",{key:t,value:e},e))),n.a.createElement("label",{htmlFor:"state"},"State"),n.a.createElement("select",{value:h,onChange:o},d.map((e,t)=>n.a.createElement("option",{key:t,value:e},e))),n.a.createElement("label",{htmlFor:"city"},"City"),n.a.createElement("select",{value:a,onChange:i},t.map((e,t)=>n.a.createElement("option",{key:t,value:e},e))),n.a.createElement("button",{onClick:s,type:"submit",value:"submit",name:"submit"},"Get Data"))))}}var m=d;class p extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.cityInput,a=e.cityList,r=e.countryInput,c=e.countryList,s=e.handleCityInput,i=e.handleCountryInput,l=e.handleStateInput,o=e.handleScaleChange,u=e.handleWarmthPrefChange,d=e.getData,p=e.getLocationData,y=e.stateInput,g=e.stateList,f=e.userTempScale,S=e.userWarmthPreference;return n.a.createElement("section",{id:"formInputSection"},n.a.createElement(h,{handleScaleChange:o,handleWarmthPrefChange:u,userTempScale:f,userWarmthPreference:S}),n.a.createElement(m,{cityInput:t,cityList:a,countryInput:r,countryList:c,handleCountryInput:i,handleStateInput:l,handleCityInput:s,getData:d,getLocationData:p,stateInput:y,stateList:g}))}}var y=p;var g={cold:{head:{text:"Beanie",imgsrc:"https://hips.hearstapps.com/vader-prod.s3.amazonaws.com/1533851320-everlane-1533851313.jpg"},torso:{text:"Long-sleeve athletic shirt",imgsrc:"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQqcsbsQ30ATXDyrEMidoBC4PGQvzDGqlXyehQLyjqHiTJOzxFu"},legs:{text:"Insulated track pants",imgsrc:"https://www.patagonia.com/dis/dw/image/v2/ABBM_PRD/on/demandware.static/-/Sites-patagonia-master/default/dw6af579dc/images/hi-res/24102_BLK.jpg?sw=300&sh=300&sfrm=png"},feet:{text:"Insulated socks",imgsrc:"https://www.verywellfit.com/thmb/Wox_s1mhrS095uy3_IQCjjcK1Pw=/1001x1001/filters:no_upscale()/darntoughvermontsocks-56a83a963df78cf7729d2a76.jpg"}},chilly:{head:{text:"Baseball cap",imgsrc:"https://images-na.ssl-images-amazon.com/images/I/81vqBRNIuKL._UX522_.jpg"},torso:{text:"Short-sleeve athletic t-shirt",imgsrc:"https://alltopguide.com/wp-content/uploads/2016/08/B01AQR03N0.jpg"},legs:{text:"Athletic shorts",imgsrc:"https://media.kohlsimg.com/is/image/kohls/3818758_Black"},feet:{text:"Insulated socks",imgsrc:"https://www.verywellfit.com/thmb/Wox_s1mhrS095uy3_IQCjjcK1Pw=/1001x1001/filters:no_upscale()/darntoughvermontsocks-56a83a963df78cf7729d2a76.jpg"}},neutral:{head:{text:"",imgsrc:""},torso:{text:"Short-sleeve athletic t-shirt",imgsrc:"https://alltopguide.com/wp-content/uploads/2016/08/B01AQR03N0.jpg"},legs:{text:"Athletic shorts",imgsrc:"https://media.kohlsimg.com/is/image/kohls/3818758_Black"},feet:{text:"Padded socks",imgsrc:"https://images-na.ssl-images-amazon.com/images/I/91KJNYH1pVL._SX355_.jpg"}},warm:{head:{text:"",imgsrc:""},torso:{text:"Tank top",imgsrc:"http://d3d71ba2asa5oz.cloudfront.net/62001083/images/jn305-royalwhite.jpg"},legs:{text:"Athletic shorts",imgsrc:"https://media.kohlsimg.com/is/image/kohls/3818758_Black"},feet:{text:"Padded socks",imgsrc:"https://images-na.ssl-images-amazon.com/images/I/91KJNYH1pVL._SX355_.jpg"}},hot:{head:{text:"",imgsrc:""},torso:{text:"Tank top",imgsrc:"http://d3d71ba2asa5oz.cloudfront.net/62001083/images/jn305-royalwhite.jpg"},legs:{text:"Athletic shorts",imgsrc:"https://media.kohlsimg.com/is/image/kohls/3818758_Black"},feet:{text:"Padded socks",imgsrc:"https://images-na.ssl-images-amazon.com/images/I/91KJNYH1pVL._SX355_.jpg"}}};class f extends r.Component{constructor(e){super(e),this.getCurrentTempIndex=()=>{const e=this.props.currentTemp;e>=85?this.setState({currentTempIndex:"hot"}):e<85&&e>=75?this.setState({currentTempIndex:"warm"}):e<75&&e>=65?this.setState({currentTempIndex:"neutral"}):e<55&&e>=45?this.setState({currentTempIndex:"chilly"}):e<45?this.setState({currentTempIndex:"cold"}):this.setState({currentTempIndex:this.state.currentTempIndex})},this.calculateWarmthPrefernce=()=>{const e=this.props.userWarmthPreference;"cold"===e?this.setState({currentTempIndex:"cold"}):"chilly"===e?this.setState({currentTempIndex:"chilly"}):"warm"===e?this.setState({currentTempIndex:"warm"}):"hot"===e?this.setState({currentTempIndex:"hot"}):this.getCurrentTempIndex(),this.setState({tempIndexCalculated:!0})},this.state={currentTempIndex:"neutral",tempIndexCalculated:!1}}componentDidMount(){this.getCurrentTempIndex(),this.calculateWarmthPrefernce()}render(){const e=this.state,t=e.currentTempIndex,a=e.tempIndexCalculated;return n.a.createElement("section",{id:"clothesData"},n.a.createElement("p",null,"What to wear"),n.a.createElement("nav",null,a?n.a.createElement("ul",{id:"clothing"},g[t].head.text?n.a.createElement("li",{id:"head"},n.a.createElement("img",{alt:"head",src:g[t].head.imgsrc}),n.a.createElement("p",null,g[t].head.text)):null,n.a.createElement("li",{id:"torso"},n.a.createElement("img",{alt:"torso",src:g[t].torso.imgsrc}),n.a.createElement("p",null,g[t].torso.text)),n.a.createElement("li",{id:"legs"},n.a.createElement("img",{alt:"legs",src:g[t].legs.imgsrc}),n.a.createElement("p",null,g[t].legs.text)),n.a.createElement("li",{id:"feet"},n.a.createElement("img",{alt:"feet",src:g[t].feet.imgsrc}),n.a.createElement("p",null,g[t].feet.text))):null))}}var S=f;class D extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.airQuality,a=e.bestDay,r=e.currentHumidity,c=e.currentTemp,s=e.currentUV,i=e.currentWeatherIcon,l=e.currentWeatherSummary,o=e.data,u=e.forecastDayName,h=e.mainPollutant,d=e.selectedDayName,m=e.userTempScale,p=e.weatherScore;let y=m.toUpperCase(),g="".concat(parseInt("f"===m?c:"c"===m?5/9*(c-32):"k"===m?5/9*(c-32)+273.15:"",10)," \xb0 ").concat(y),f=p.toFixed(1),S=parseInt(100*r,10);const D="partly-cloudy-day"===i?"wi wi-day-sunny-overcast":"wind"===i?"wi wi-day-windy":"sunny"===i||"clear-day"===i?"wi wi-day-sunny":"clear-night"===i?"wi wi-night-clear":"partly-cloudy-night"===i?"wi wi-night-partly-cloudy":"cloudy"===i?"wi wi-cloudy":"rain"===i?"wi wi-rain":"snow"===i?"wi wi-snow":"sleet"===i?"wi wi-sleet":"fog"===i?"wi wi-fog":null,E=f>=7.5?"Good":f>=5&&f<7.5?"Average":f>=2.5&&f<5?"Poor":f>=0&&f<2.5?"Miserable":null,v="Good"===E?"green":"Average"===E?"blue":"Poor"===E?"yellow":"Miserable"===E?"red":null;return n.a.createElement("section",{id:"scoreData"},n.a.createElement("span",{id:"day"},a||d||u),n.a.createElement("i",{id:"weatherIcon",className:D}),n.a.createElement("span",{id:"weatherSummary"},l),n.a.createElement("span",{id:"weatherScore",className:v},f,n.a.createElement("span",{id:"weatherScoreRating"},"(",E,")")),n.a.createElement("span",{id:"currentUV"},"UV Index: ",s),n.a.createElement("span",{id:"currentHumidity"},S,"% hum."),t?n.a.createElement("span",{id:"airQuality"},t,n.a.createElement("span",{id:"mainParticulate"},"(",h,")")):null,n.a.createElement("span",{id:"temperature"},g),o?n.a.createElement("p",{id:"locationOutput"},n.a.createElement("span",{id:"cityOutput"},o.city),n.a.createElement("span",{id:"stateOutput"},o.state),n.a.createElement("span",{id:"countryOutput"},o.country)):null)}}var E=D,v=a(9);const I="61a41f12-8415-46c9-aaa0-130cf06e8f42",T="7caf9128d134c8a87482de7629abebdf",L="AIzaSyAGNAWHYmzPtl9h2vVMmLBhlD5o3Et1NCw";class w extends r.Component{constructor(e){super(e),this.state={}}componentDidMount(){const e=this.props,t=e.currentLat,a=e.currentLng;this.setState({currentLocation:{lat:t,lng:a}})}render(){const e=this.props,t=e.currentLat,a=e.currentLng,r=e.loaded;return n.a.createElement("section",{id:"map"},r?n.a.createElement(v.Map,{center:{lat:t,lng:a},initialCenter:{lat:38.2527,lng:-85.7585},google:this.props.google,zoom:12},n.a.createElement(v.Marker,{position:{lat:t,lng:a}})):null)}}var b=Object(v.GoogleApiWrapper)(e=>({apiKey:L}))(w);class W extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.airQuality,a=e.currentHumidity,r=e.currentLat,c=e.currentLng,s=e.currentTemp,i=e.currentUV,l=e.currentWeatherIcon,o=e.currentWeatherSummary,u=e.data,h=e.dataReceived,d=e.dataRequested,m=e.mainPollutant,p=e.userTempScale,y=e.userWarmthPreference,g=e.weatherScore;return n.a.createElement("section",{id:"outputContainer"},n.a.createElement("section",{id:"dataOutput"},d?n.a.createElement("h3",null,"Loading"):h?n.a.createElement(S,{currentTemp:s,userWarmthPreference:y}):n.a.createElement("section",{id:"no-data"},n.a.createElement("h3",null,"You can use the menu to the right to get data")),d?n.a.createElement("h3",null,"Loading"):h?n.a.createElement(E,{airQuality:t,currentHumidity:a,currentTemp:s,currentUV:i,currentWeatherIcon:l,currentWeatherSummary:o,data:u,mainPollutant:m,userTempScale:p,weatherScore:g}):null),d?n.a.createElement("h3",null,"Loading"):h?n.a.createElement(b,{currentLat:r,currentLng:c}):null)}}var x=W;class C extends r.Component{constructor(e){super(e),this.state={}}render(){const e=this.props,t=e.airQuality,a=e.cityInput,r=e.cityList,c=e.countryInput,s=e.countryList,i=e.currentHumidity,l=e.currentLat,o=e.currentLng,u=e.currentTemp,h=e.currentUV,d=e.currentWeatherIcon,m=e.currentWeatherSummary,p=e.data,g=e.dataReceived,f=e.dataRequested,S=e.handleCityInput,D=e.handleCountryInput,E=e.handleStateInput,v=e.handleScaleChange,I=e.handleWarmthPrefChange,T=e.getData,L=e.getLocationData,w=e.mainPollutant,b=e.stateInput,W=e.stateList,C=e.userTempScale,P=e.userWarmthPreference,k=e.weatherScore;return n.a.createElement("main",{id:"main"},n.a.createElement("section",{id:"formSection"},n.a.createElement("section",{id:"mainNav"},n.a.createElement("a",{href:"#formSection"},n.a.createElement("i",{className:"fas fa-angle-double-right fa-2x",id:"openNav"})),n.a.createElement("a",{href:"#top"},n.a.createElement("i",{className:"fas fa-angle-double-left fa-2x",id:"closeNav"}))),n.a.createElement(y,{cityInput:a,cityList:r,countryInput:c,countryList:s,handleCityInput:S,handleCountryInput:D,handleScaleChange:v,handleStateInput:E,handleWarmthPrefChange:I,getData:T,getLocationData:L,stateInput:b,stateList:W,userTempScale:C,userWarmthPreference:P})),n.a.createElement(x,{airQuality:t,currentHumidity:i,currentLat:l,currentLng:o,currentTemp:u,currentUV:h,currentWeatherIcon:d,currentWeatherSummary:m,data:p,dataReceived:g,dataRequested:f,mainPollutant:w,userTempScale:C,userWarmthPreference:P,weatherScore:k}))}}var P=C;class k extends r.Component{constructor(e){super(e),this.state={}}render(){return n.a.createElement("footer",null,n.a.createElement("span",null,n.a.createElement("a",{href:"https://darksky.net/poweredby/"},"Powered by Dark Sky")),n.a.createElement("span",null,"2018"),n.a.createElement("span",null,n.a.createElement("a",{href:"#top"},"Github")))}}var H=k;a(44),a(45);class N extends r.Component{constructor(){super(),this.calculateWeatherScore=()=>{const e=this.state,t=e.currentHumidity,a=e.currentPrecipProbability,r=e.currentTemp,n=e.currentUV;let c=10*t,s=(this.tempScale-Math.abs(this.medianTemp-r)/this.stdDevTemp+(this.uvScale-n)+c+(this.rainScale-10*a))/4;this.setState({weatherScore:s,dataRequested:!1,dataReceived:!0})},this.fetchCurrentConditions=()=>{const e=this.state,t=e.currentLat,a=e.currentLng;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{console.log("Fetch Current Conditions: ",e),this.setState({currentHumidity:e.currently.humidity,currentPrecipProbability:e.currently.precipProbability,currentTemp:e.currently.apparentTemperature,currentUV:e.currently.uvIndex,currentWeatherIcon:e.currently.icon,currentWeatherSummary:e.currently.summary}),this.calculateWeatherScore()}).catch(e=>console.log("fetchCurrentConditions in App component",e))},this.fetchCityList=e=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/cities?state=".concat(e.target.value,"&country=").concat(this.state.countryInput,"&key=").concat(I)).then(e=>e.json()).then(e=>e.data.map(e=>this.setState({cityList:[...this.state.cityList,e.city],cityInput:this.state.cityList[0]}))).catch(e=>console.log("Fetch city list in App component",e))},this.fetchDefaultCityList=(e,t)=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/cities?state=".concat(e,"&country=").concat(t,"&key=").concat(I)).then(e=>e.json()).then(e=>e.data.map(e=>this.setState({cityList:[...this.state.cityList,e.city],cityInput:"Louisville"}))).catch(e=>console.log("Fetch city list in App component",e))},this.fetchStateList=e=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/states?country=".concat(e.target.value,"&key=").concat(I)).then(e=>e.json()).then(e=>e.data.map(e=>this.setState({stateList:[...this.state.stateList,e.state]}))).catch(e=>console.log("Fetch state list in App component",e))},this.fetchDefaultStateList=e=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/states?country=".concat(e,"&key=").concat(I)).then(e=>e.json()).then(e=>e.data.map(e=>this.setState({stateList:[...this.state.stateList,e.state],stateInput:"Kentucky"}))).catch(e=>console.log("Fetch state list in App component",e))},this.fetchCountryList=()=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/countries?key=".concat(I)).then(e=>e.json()).then(e=>e.data.map(e=>this.setState({countryList:[...this.state.countryList,e.country]}))).catch(e=>console.log("Fetch country list in App component",e))},this.fetchLocation=()=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/nearest_city?key=".concat(I)).then(e=>e.json()).then(e=>{this.setState({airQuality:e.data.current.pollution.aqius,cityInput:e.data.city,countryInput:e.data.country,currentLat:e.data.location.coordinates[1],currentLng:e.data.location.coordinates[0],data:e.data,dataRequested:!0,mainPollutant:e.data.current.pollution.mainus,stateInput:e.data.state}),this.fetchCurrentConditions()}).catch(e=>console.log("fetchLocation in App component",e))},this.fetchStd=()=>{fetch("https://calm-refuge-25215.herokuapp.com/https://api.airvisual.com/v2/city?city=".concat(this.state.cityInput,"&state=").concat(this.state.stateInput,"&country=").concat(this.state.countryInput,"&key=").concat(I)).then(e=>e.json()).then(e=>{this.setState({currentLat:e.data.location.coordinates[1],currentLng:e.data.location.coordinates[0],dataRequested:!0,data:e.data,airQuality:e.data.current.pollution.aqius,mainPollutant:e.data.current.pollution.mainus}),this.fetchCurrentConditions()}).catch(e=>console.log("fetchStd in App component",e))},this.getData=e=>{e.preventDefault(),this.setState({cityInput:this.state.cityInput,stateinput:this.state.stateInput,countryInput:this.state.countryInput}),this.fetchStd()},this.getLocationData=e=>{e.preventDefault(),this.fetchLocation()},this.handleCityInput=e=>{e.preventDefault(),this.setState({cityInput:e.target.value})},this.loadDefaultCountry=()=>{this.setState({countryInput:"USA"}),this.fetchDefaultStateList("USA"),this.loadDefaultState()},this.loadDefaultState=()=>{this.setState({stateInput:"Kentucky"}),this.fetchDefaultCityList("Kentucky","USA"),this.loadDefaultCity()},this.loadDefaultCity=()=>{this.setState({cityInput:"Louisville"})},this.handleCountryInput=e=>{e.preventDefault(),this.setState({countryInput:e.target.value,cityInput:"",cityList:[],stateInput:"",stateList:[]}),this.fetchStateList(e)},this.handleStateInput=e=>{e.preventDefault(),this.setState({stateInput:e.target.value,cityInput:"",cityList:[]}),this.fetchCityList(e)},this.handleScaleChange=e=>{this.setState({userTempScale:e.target.value})},this.handleWarmthPrefChange=e=>{this.setState({userWarmthPreference:e.target.value})},this.medianTemp=55,this.stdDevTemp=5,this.tempScale=10,this.uvScale=10,this.rainScale=10,this.state={airQuality:0,cityInput:"Louisville",cityList:[],countryInput:"USA",countryList:[],currentWeatherIcon:"wi wi-sunny-day",currentLat:38.2527,currentLng:-85.7585,currentHumidity:0,currentPrecipProbability:0,currentTemp:0,currentUV:0,data:{},dataReceived:!1,dataRequested:!1,mainPollutant:"",stateInput:"Kentucky",stateList:[],userTempScale:"f",userWarmthPreference:"neutral",weatherScore:0}}componentDidMount(){this.fetchCountryList(),this.loadDefaultCountry(),console.log("App component mounted state:",this.state)}render(){const e=this.state,t=e.airQuality,a=e.cityInput,r=e.cityList,c=e.countryInput,s=e.countryList,i=e.currentHumidity,l=e.currentLat,u=e.currentLng,h=e.currentTemp,d=e.currentUV,m=e.currentWeatherIcon,p=e.currentWeatherSummary,y=e.data,g=e.dataReceived,f=e.dataRequested,S=e.mainPollutant,D=e.stateInput,E=e.stateList,v=e.userTempScale,I=e.userWarmthPreference,T=e.weatherScore;return n.a.createElement("div",{className:"App"},n.a.createElement(o,null),n.a.createElement(P,{airQuality:t,cityInput:a,cityList:r,countryInput:c,countryList:s,currentHumidity:i,currentLat:l,currentLng:u,currentTemp:h,currentUV:d,currentWeatherIcon:m,currentWeatherSummary:p,data:y,dataReceived:g,dataRequested:f,getData:this.getData,getLocationData:this.getLocationData,handleCityInput:this.handleCityInput,handleCountryInput:this.handleCountryInput,handleStateInput:this.handleStateInput,handleScaleChange:this.handleScaleChange,handleWarmthPrefChange:this.handleWarmthPrefChange,mainPollutant:S,stateInput:D,stateList:E,userTempScale:v,userWarmthPreference:I,weatherScore:T}),n.a.createElement(H,null))}}var A=N;class F extends r.Component{constructor(e){super(e),this.calculateWeatherScore=()=>{const e=this.state,t=e.selectedDayHumidity,a=e.selectedDayPrecipProbability,r=e.selectedDayTempHigh,n=e.selectedDayTempLow,c=e.selectedDayUV;let s=10*t,i=(r+n)/2,l=(this.tempScale-Math.abs(this.medianTemp-i)/this.stdDevTemp+(this.uvScale-c)+s+(this.rainScale-10*a))/4;this.setState({selectedDayWeatherScore:l,selectedDayAveragedTemp:i})},this.calcuateWeatherScoresByDay=()=>{const e=this.state,t=e.forecastHumidity,a=e.forecastPrecipProbability,r=e.forecastTempHigh,n=e.forecastTempLow,c=e.forecastUV,s=[];for(let i=0;i<=7;i++){let e=10*t[i],l=(r[i]+n[i])/2,o=(this.tempScale-Math.abs(this.medianTemp-l)/this.stdDevTemp+(this.uvScale-c[i])+e+(this.rainScale-10*a[i]))/4;s.push(o)}this.setState({forecastWeatherScores:s})},this.fetchForecast=()=>{const e=this.state,t=e.currentLat,a=e.currentLng;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{this.setState({forecastHumidity:e.daily.data.map(e=>e.humidity),forecastPrecipProbability:e.daily.data.map(e=>e.precipProbability),forecastTempHigh:e.daily.data.map(e=>e.apparentTemperatureHigh),forecastTempLow:e.daily.data.map(e=>e.apparentTemperatureLow),forecastUV:e.daily.data.map(e=>e.uvIndex),forecastIsRaning:e.daily.data.map(e=>e.precipProbability),forecastTime:e.daily.data.map(e=>e.sunriseTime),forecastWeatherIcon:e.daily.data.map(e=>e.icon),forecastWeatherSummary:e.daily.data.map(e=>e.summary)}),this.calcuateWeatherScoresByDay()}).catch(e=>console.log("fetchForecast error in Scheduler: ".concat(e)))},this.fetchForecastBySelectedDay=()=>{const e=this.state,t=e.currentLat,a=e.currentLng,r=e.selectedDayIndex;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{this.setState({selectedDayHumidity:e.daily.data[r].humidity,selectedDayPrecipProbability:e.daily.data[r].precipProbability,selectedDayTempHigh:e.daily.data[r].apparentTemperatureHigh,selectedDayTempLow:e.daily.data[r].apparentTemperatureLow,selectedDayUV:e.daily.data[r].uvIndex,selectedDayIsRaning:e.daily.data[r].precipProbability,selectedDayWeatherIcon:e.daily.data[r].icon,selectedDayWeatherSummary:e.daily.data[r].summary,isDaySelected:!0}),this.calculateWeatherScore()}).catch(e=>console.log("fetchForecastBySelectedDay error in Scheduler: ".concat(e)))},this.handleDayChange=e=>{e.preventDefault();let t="Sunday"===e.target.value?0:"Monday"===e.target.value?1:"Tuesday"===e.target.value?2:"Wednesday"===e.target.value?3:"Thursday"===e.target.value?4:"Friday"===e.target.value?5:"Saturday"===e.target.value?6:null;this.setState({selectedDayName:e.target.value,selectedDayIndex:t}),this.getDeltaSelectedDay()},this.getDeltaSelectedDay=()=>{const e=this.state,t=e.selectedDayIndex,a=e.currentDayIndex;this.setState({deltaSelectedDay:a<t?t-a:a>t?7-(a-t):a===t?0:null},this.fetchForecastBySelectedDay())},this.d=new Date,this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.medianTemp=55,this.stdDevTemp=5,this.tempScale=10,this.uvScale=10,this.rainScale=10,this.state={currentDayName:this.days[this.d.getDay()],currentDayIndex:this.d.getDay(),selectedDayName:this.days[this.d.getDay()],selectedDayIndex:0,deltaSelectedDay:0,currentLat:38.2527,currentLng:-85.7585,forecastHumidity:[],forecastTempHigh:[],forecastTempLow:[],forecastTime:[],forecastUV:[],forecastPrecipProbability:[],forecastWeatherScores:[],forecastWeatherIcon:"wi wi-na",forecastWeatherSummary:"",isDaySelected:!1,selectedDayAQ:0,selectedDayHumidity:0,selectedDayIsRaning:0,selectedDayTempHigh:0,selectedDayTempLow:0,selectedDayAveragedTemp:0,selectedDayUV:0,selectedDayWeatherSummary:"",selectedDayData:!1,selectedDayMainPollutant:"",selectedDayUserTempScale:"f",selectedDayWeatherIcon:"wi wi-na",selectedDayWeatherScore:0}}componentDidMount(){console.log("Scheduler component mount state: ",this.state)}render(){const e=this.state,t=e.isDaySelected,a=e.selectedDayName,r=e.selectedDayAQ,c=e.selectedDayHumidity,s=e.selectedDayAveragedTemp,i=e.selectedDayUV,l=e.selectedDayWeatherIcon,u=e.selectedDayWeatherSummary,h=e.selectedDayData,d=e.selectedDayMainPollutant,m=e.selectedDayUserTempScale,p=e.selectedDayWeatherScore;return n.a.createElement("section",{id:"schedulerSection"},n.a.createElement(o,null),n.a.createElement("section",{id:"scheduler",className:"column"},n.a.createElement("h2",null,"Scheduler"),n.a.createElement("p",null,"Pick a day to get information or find the best day in the next week"),n.a.createElement("label",null,"Pick a day of the week"),n.a.createElement("select",{value:a,onChange:this.handleDayChange},n.a.createElement("option",{value:"Sunday"},"Sunday"),n.a.createElement("option",{value:"Monday"},"Monday"),n.a.createElement("option",{value:"Tuesday"},"Tuesday"),n.a.createElement("option",{value:"Wednesday"},"Wednesday"),n.a.createElement("option",{value:"Thursday"},"Thursday"),n.a.createElement("option",{value:"Friday"},"Friday"),n.a.createElement("option",{value:"Saturday"},"Saturday")),t?n.a.createElement(E,{airQuality:r,currentHumidity:c,currentTemp:s,currentUV:i,currentWeatherIcon:l,currentWeatherSummary:u,data:h,mainPollutant:d,selectedDayName:a,userTempScale:m,weatherScore:p}):null),n.a.createElement(H,null))}}var U=F;class R extends r.Component{constructor(e){super(e),this.calculateWeatherScore=()=>{const e=this.state,t=e.selectedDayHumidity,a=e.selectedDayPrecipProbability,r=e.selectedDayTempHigh,n=e.selectedDayTempLow,c=e.selectedDayUV;let s=10*t,i=(r+n)/2,l=(this.tempScale-Math.abs(this.medianTemp-i)/this.stdDevTemp+(this.uvScale-c)+s+(this.rainScale-10*a))/4;this.setState({selectedDayWeatherScore:l,selectedDayAveragedTemp:i})},this.findBestDayToRun=()=>{const e=this.state,t=e.forecastTime,a=e.forecastWeatherScores;let r=a.indexOf(Math.max(...a)),n=new Date(1e3*t[r]),c=new Date(n).getDay(),s=0===c?"Sunday":1===c?"Monday":2===c?"Tuesday":3===c?"Wednesday":4===c?"Thursday":5===c?"Friday":6===c?"Saturday":null;this.setState({bestDay:s,bestDayIndex:c,bestDayFound:!0}),this.getDeltaBestDay(),this.fetchForecastBySelectedDay()},this.calcuateWeatherScoresByDay=()=>{const e=this.state,t=e.forecastHumidity,a=e.forecastPrecipProbability,r=e.forecastTempHigh,n=e.forecastTempLow,c=e.forecastUV,s=[];for(let i=0;i<=7;i++){let e=10*t[i],l=(r[i]+n[i])/2,o=(this.tempScale-Math.abs(this.medianTemp-l)/this.stdDevTemp+(this.uvScale-c[i])+e+(this.rainScale-10*a[i]))/4;s.push(o)}this.setState({forecastWeatherScores:s}),this.findBestDayToRun()},this.fetchForecast=()=>{const e=this.state,t=e.currentLat,a=e.currentLng;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{this.setState({forecastHumidity:e.daily.data.map(e=>e.humidity),forecastPrecipProbability:e.daily.data.map(e=>e.precipProbability),forecastTempHigh:e.daily.data.map(e=>e.apparentTemperatureHigh),forecastTempLow:e.daily.data.map(e=>e.apparentTemperatureLow),forecastUV:e.daily.data.map(e=>e.uvIndex),forecastIsRaning:e.daily.data.map(e=>e.precipProbability),forecastTime:e.daily.data.map(e=>e.sunriseTime),forecastWeatherIcon:e.daily.data.map(e=>e.icon),forecastWeatherSummary:e.daily.data.map(e=>e.summary)}),this.calcuateWeatherScoresByDay()}).catch(e=>console.log("fetchForcas error in Best Day: ".concat(e)))},this.fetchForecastBySelectedDay=()=>{const e=this.state,t=e.currentLat,a=e.currentLng,r=e.selectedDayIndex;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{this.setState({selectedDayHumidity:e.daily.data[r].humidity,selectedDayPrecipProbability:e.daily.data[r].precipProbability,selectedDayTempHigh:e.daily.data[r].apparentTemperatureHigh,selectedDayTempLow:e.daily.data[r].apparentTemperatureLow,selectedDayUV:e.daily.data[r].uvIndex,selectedDayIsRaning:e.daily.data[r].precipProbability,selectedDayWeatherIcon:e.daily.data[r].icon,selectedDayWeatherSummary:e.daily.data[r].summary}),this.calculateWeatherScore()}).catch(e=>console.log("fetchForecastBySelectedDay error in Best Day: ".concat(e)))},this.getDeltaBestDay=()=>{const e=this.state;let t=e.bestDayIndex-e.currentDayIndex;this.setState({selectedDayIndex:t})},this.d=new Date,this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],this.medianTemp=55,this.stdDevTemp=5,this.tempScale=10,this.uvScale=10,this.rainScale=10,this.state={bestDay:null,bestDayIndex:null,bestDayFound:!1,currentDayName:this.days[this.d.getDay()],currentDayIndex:this.d.getDay(),selectedDayIndex:null,deltaSelectedDay:null,currentLat:38.2527,currentLng:-85.7585,forecastHumidity:[],forecastTempHigh:[],forecastTempLow:[],forecastTime:[],forecastUV:[],forecastPrecipProbability:[],forecastWeatherScores:[],forecastWeatherIcon:"wi wi-na",forecastWeatherSummary:"",isDaySelected:!1,selectedDayAQ:0,selectedDayHumidity:0,selectedDayIsRaning:0,selectedDayTempHigh:0,selectedDayTempLow:0,selectedDayAveragedTemp:0,selectedDayUV:0,selectedDayWeatherSummary:"",selectedDayData:!1,selectedDayMainPollutant:"",selectedDayUserTempScale:"f",selectedDayWeatherIcon:"wi wi-na",selectedDayWeatherScore:0}}componentDidMount(){console.log("Best Day mounted state: ",this.state)}render(){const e=this.state,t=e.bestDay,a=e.bestDayFound,r=e.selectedDayAQ,c=e.selectedDayHumidity,s=e.selectedDayAveragedTemp,i=e.selectedDayUV,l=e.selectedDayWeatherIcon,u=e.selectedDayWeatherSummary,h=e.selectedDayData,d=e.selectedDayMainPollutant,m=e.selectedDayUserTempScale,p=e.selectedDayWeatherScore;return n.a.createElement("section",{id:"schedulerSection"},n.a.createElement(o,null),n.a.createElement("section",{id:"bestDay",className:"column"},n.a.createElement("h2",null,"Best Day"),n.a.createElement("p",null,"Find the best day to run in the next 7 days"),n.a.createElement("label",null,"Find the best day of the week"),n.a.createElement("button",{onClick:this.fetchForecast},"Go"),a?n.a.createElement(E,{airQuality:r,bestDay:t,currentHumidity:c,currentTemp:s,currentUV:i,currentWeatherIcon:l,currentWeatherSummary:u,data:h,mainPollutant:d,userTempScale:m,weatherScore:p}):null),n.a.createElement(H,null))}}var B=R;class V extends r.Component{constructor(e){super(e),this.calcuateWeatherScoresByDay=()=>{const e=this.state,t=e.forecastHumidity,a=e.forecastTempHigh,r=e.forecastTempLow,n=e.forecastUV,c=e.forecastPrecipProbability,s=[],i=[];for(let l=0;l<=7;l++){let e=10*t[l],o=(a[l]+r[l])/2,u=(this.tempScale-Math.abs(this.medianTemp-o)/this.stdDevTemp+(this.uvScale-n[l])+e+(this.rainScale-10*c[l]))/4;i.push(o),s.push(u)}this.setState({forecastWeatherScores:s,forecastAveragedTemp:i,isDataRequested:!1,isDataReceived:!0})},this.fetchForecast=()=>{const e=this.state,t=e.currentLat,a=e.currentLng;fetch("https://calm-refuge-25215.herokuapp.com/https://api.darksky.net/forecast/".concat(T,"/").concat(t,",").concat(a)).then(e=>e.json()).then(e=>{this.setState({forecastHumidity:e.daily.data.map(e=>e.humidity),forecastPrecipProbability:e.daily.data.map(e=>e.precipProbability),forecastTempHigh:e.daily.data.map(e=>e.apparentTemperatureHigh),forecastTempLow:e.daily.data.map(e=>e.apparentTemperatureLow),forecastUV:e.daily.data.map(e=>e.uvIndex),forecastIsRaning:e.daily.data.map(e=>e.precipProbability),forecastTime:e.daily.data.map(e=>e.sunriseTime),forecastWeatherIcons:e.daily.data.map(e=>e.icon),forecastWeatherSummary:e.daily.data.map(e=>e.summary),isDataRequested:!0}),this.getForecastDayNames(),this.calcuateWeatherScoresByDay()}).catch(e=>console.log("fetchForecast error in Scheduler: ".concat(e)))},this.getForecastDayNames=()=>{const e=this.state.forecastDayNames;for(let t=0;t<7;t++)e[t]=this.days[this.d.getDay()+t]},this.getForecastScores=()=>{const e=this.state,t=e.forecastHumidity,a=e.forecastAveragedTemp,r=e.forecastUV,c=e.forecastWeatherIcons,s=e.forecastWeatherSummary,i=e.forecastDayNames,l=e.userTempScale,o=e.forecastWeatherScores;let u=[],h=[];for(let d=0;d<7;d++)h.push(n.a.createElement(E,{key:d,currentHumidity:t[d],currentTemp:a[d],currentUV:r[d],currentWeatherIcon:c[d],currentWeatherSummary:s[d],forecastDayName:i[d],userTempScale:l,weatherScore:o[d]}));return u.push(h),u},this.d=new Date,this.days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"],this.medianTemp=55,this.stdDevTemp=5,this.tempScale=10,this.uvScale=10,this.rainScale=10,this.state={currentDayName:this.days[this.d.getDay()],currentDayIndex:this.d.getDay(),currentLat:38.2527,currentLng:-85.7585,forecastAveragedTemp:[],forecastDayNames:[],forecastHumidity:[],forecastPrecipProbability:[],forecastTempHigh:[],forecastTempLow:[],forecastTime:[],forecastUV:[],forecastWeatherIcons:[],forecastWeatherScores:[],forecastWeatherSummary:[],isDataReceived:!1,isDataRequested:!1,userTempScale:"f"}}componentWillMount(){this.fetchForecast()}render(){const e=this.state,t=e.isDataRequested,a=e.isDataReceived;return n.a.createElement("section",{id:"forecastSection"},n.a.createElement(o,null),n.a.createElement("section",{id:"sevenDayForecast",className:"column"},n.a.createElement("h2",null,"7 Day Forecast"),t?n.a.createElement("h3",null,"Loading..."):a?n.a.createElement("ul",null,this.getForecastScores()):null),n.a.createElement(H,null))}}var j=V;class M extends r.Component{constructor(e){super(e),this.state={}}render(){return n.a.createElement("section",{id:"aboutSection"},n.a.createElement(o,null),n.a.createElement("section",{id:"about",className:"column"},n.a.createElement("h2",null,"About"),n.a.createElement("p",null,"Get a rating on weather conditions for outdoor activities"),n.a.createElement("a",{href:"https://jbratcher.github.io/ShouldIRun/",class:"button"},"Demo page")),n.a.createElement(H,null))}}var Q=M,_=a(49),q=a(51),K=a(50);const z=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function G(e){navigator.serviceWorker.register(e).then(e=>{e.onupdatefound=()=>{const t=e.installing;t.onstatechange=()=>{"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}}).catch(e=>{console.error("Error during service worker registration:",e)})}s.a.render(n.a.createElement(_.a,{basename:"/should-i-run"},n.a.createElement(q.a,null,n.a.createElement(K.a,{exact:!0,path:"/",component:A}),n.a.createElement(K.a,{exact:!0,path:"/scheduler",render:e=>n.a.createElement(U,e)}),n.a.createElement(K.a,{exact:!0,path:"/bestday",render:e=>n.a.createElement(B,e)}),n.a.createElement(K.a,{exact:!0,path:"/forecast",render:e=>n.a.createElement(j,e)}),n.a.createElement(K.a,{exact:!0,path:"/about",render:e=>n.a.createElement(Q,e)}))),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL("/should-i-run",window.location).origin!==window.location.origin)return;window.addEventListener("load",()=>{const e="".concat("/should-i-run","/service-worker.js");z?(!function(e){fetch(e).then(t=>{404===t.status||-1===t.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then(e=>{e.unregister().then(()=>{window.location.reload()})}):G(e)}).catch(()=>{console.log("No internet connection found. App is running in offline mode.")})}(e),navigator.serviceWorker.ready.then(()=>{console.log("This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ")})):G(e)})}}()}},[[17,1,2]]]);
//# sourceMappingURL=main.be23c4b6.chunk.js.map